<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cp.campers.admin.model.dao.AdminMapper">

	<!-- 회원 -->
	<resultMap type="com.cp.campers.member.model.vo.Member" id="memberResultMap">
		<id property="userNo" column="USER_NO"/>
		<result property="id" column="USER_ID"/>
		<result property="pwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="profilePath" column="PROFILE_PATH"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="USER_PHONE"/>
		<result property="status" column="STATUS"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<collection property="memberRoleList" resultMap="memberRoleResultMap"/>
	</resultMap>

	<resultMap type="com.cp.campers.member.model.vo.MemberRole" id="memberRoleResultMap">
		<id property="memberNo" column="USER_NO"/>
		<id property="authorityCode" column="AUTHORITY_CODE"/>
		<association property="authority" resultMap="authorityResultMap"/>
	</resultMap>
	
	<resultMap type="com.cp.campers.member.model.vo.Authority" id="authorityResultMap">      <!-- 위의 association(1대 1)에서의 resultMap이랑 여기서 id랑 일치시키기 -->
		<id property="authorityCode" column="AUTHORITY_CODE"/>
		<result property="authorityName" column="AUTHORITY_NAME"/>
		<result property="authorityDesc" column="AUTHORITY_DESC"/>
	</resultMap>
   
	<select id="getListCount" resultType="_int">
   		SELECT
		      COUNT(A.USER_NO)
		 FROM MEMBER A
		 LEFT JOIN AUTHORITY_ROLE B ON(A.USER_NO = B.USER_NO)
		 LEFT JOIN AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
		WHERE B.AUTHORITY_CODE != 3
	</select>
   
	<select id="getListCountBySearch" parameterType="com.cp.campers.admin.model.vo.Search" resultType="_int">
   		SELECT
		      COUNT(A.USER_NO)
		 FROM MEMBER A
		 LEFT JOIN AUTHORITY_ROLE B ON(A.USER_NO = B.USER_NO)
		 LEFT JOIN AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
		<choose>
		<when test="searchCondition == 'no'">		
		WHERE A.USER_NO = #{ searchValue }
		</when>
		<when test="searchCondition == 'id'">
		WHERE A.USER_ID LIKE '%' || #{ searchValue } || '%'
		</when>
		</choose>
		 AND B.AUTHORITY_CODE != 3
	</select>
   
	<select id="findAllMember" parameterType="com.cp.campers.admin.model.vo.PageInfo" resultMap="memberResultMap">
	   	SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
	                          A.USER_NO,
	                          A.USER_ID, 
	                          A.USER_NAME, 
	                          A.EMAIL, 
	                          A.CREATE_DATE,
	                          A.STATUS,
	                          B.AUTHORITY_CODE
	                     FROM MEMBER A
	                     LEFT JOIN AUTHORITY_ROLE B ON(A.USER_NO = B.USER_NO)
	                     LEFT JOIN AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
	                    WHERE B.AUTHORITY_CODE != 3
	                    ORDER BY A.CREATE_DATE) A)
		 WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>
   
	<update id="updateMember" parameterType="com.cp.campers.member.model.vo.Member">
		UPDATE MEMBER
		   SET STATUS = #{ status }
		WHERE USER_NO = #{ userNo }
	</update>
   
	<update id="updateMemberRole" parameterType="com.cp.campers.member.model.vo.MemberRole">
   		UPDATE AUTHORITY_ROLE
		   SET AUTHORITY_CODE = #{ authorityCode }
		WHERE USER_NO = #{ memberNo }
	</update>

	<select id="searchMember" parameterType="hashmap" resultMap="memberResultMap">
	   	SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
	                          A.USER_NO,
	                          A.USER_ID, 
	                          A.USER_NAME, 
	                          A.EMAIL, 
	                          A.CREATE_DATE,
	                          A.STATUS,
	                          B.AUTHORITY_CODE
	                     FROM MEMBER A
	                     LEFT JOIN AUTHORITY_ROLE B ON(A.USER_NO = B.USER_NO)
	                     LEFT JOIN AUTHORITY C ON(B.AUTHORITY_CODE = C.AUTHORITY_CODE)
	                     <choose>
						 <when test="search.searchCondition == 'no'">		
						 WHERE A.USER_NO = #{ search.searchValue }
						 </when>
						 <when test="search.searchCondition == 'id'">
						 WHERE A.USER_ID LIKE '%' || #{ search.searchValue } || '%'
						 </when>
						 </choose>
						   AND B.AUTHORITY_CODE != 3) A)
		 WHERE RNUM BETWEEN #{ pi.startRow } AND #{ pi.endRow }
	</select>


	<!-- 신고 -->
	<resultMap type="com.cp.campers.admin.model.vo.Report" id="reportResultMap">
		<id property="rNo" column="REPORT_NO"/>
		<result property="reason" column="REPORT_REASON"/>
		<result property="reportDate" column="REPORT_DATE"/>
		<result property="reportType" column="REPORT_TYPE"/>
		<result property="victim" column="VICTIM"/>
		<result property="vicId" column="VIC_ID"/>
		<result property="vicNickName" column="VIC_NICKNAME"/>
		<result property="suspect" column="SUSPECT"/>
		<result property="susId" column="SUS_ID"/>
		<result property="susNickName" column="SUS_NICKNAME"/>
		<result property="reportStatus" column="REPORT_STATUS"/>
		<result property="bid" column="BID1"/>
		<result property="bid" column="BID2"/>
		<result property="deleteStatus" column="STATUS1"/>
		<result property="deleteStatus" column="STATUS2"/>
	</resultMap>

	<insert id="insertReport" parameterType="com.cp.campers.admin.model.vo.Report">
		INSERT INTO REPORT 
		VALUES (SEQ_REPORT_NO.NEXTVAL
                         , #{ reason }
                         , DEFAULT
                         , #{ reportType }
                         , #{ victim }
                         , #{ suspect }
                         , DEFAULT)
	</insert>
	
	<insert id="insertReportByBoard" parameterType="_int">
		INSERT INTO B_REPORT 
		VALUES(#{ id }
             , SEQ_REPORT_NO.CURRVAL)
	</insert>
	
	<insert id="insertReportByReply" parameterType="_int">
		INSERT INTO C_REPORT 
		VALUES(#{ id }
             , SEQ_REPORT_NO.CURRVAL)
	</insert>

	<select id="getReportCount" resultType="_int">
   		SELECT
		      COUNT(REPORT_NO)
		 FROM REPORT
		WHERE REPORT_STATUS = 'N'
	</select>
	
	<select id="findAllReport" parameterType="com.cp.campers.admin.model.vo.PageInfo" resultMap="reportResultMap">
		SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
						      R.REPORT_NO
						    , VICTIM
						    , M1.USER_ID VIC_ID
						    , M1.NICKNAME VIC_NICKNAME
						    , SUSPECT
						    , M2.USER_ID SUS_ID
						    , M2.NICKNAME SUS_NICKNAME
						    , REPORT_REASON
						    , REPORT_DATE
						    , REPORT_TYPE
                            , BR.BID BID1
                            , RP.BID BID2
                            , B1.STATUS STATUS1
                            , B2.STATUS STATUS2
						FROM REPORT R
						JOIN MEMBER M1 ON(M1.USER_NO = VICTIM)
						JOIN MEMBER M2 ON(M2.USER_NO = SUSPECT)
                        LEFT JOIN C_REPORT CR ON(R.REPORT_NO = CR.REPORT_NO)
                        LEFT JOIN B_REPORT BR ON(R.REPORT_NO = BR.REPORT_NO)
                        LEFT JOIN REPLY RP USING(CID)
                        LEFT JOIN BOARD B1 ON(B1.BID = RP.BID)
                        LEFT JOIN BOARD B2 ON(B2.BID = BR.BID)
						WHERE REPORT_STATUS = 'N'
						ORDER BY REPORT_DATE DESC) A)
		 WHERE RNUM BETWEEN ${startRow} AND ${endRow}
	</select>
	
	<update id="completeReport" parameterType="_int">
		UPDATE REPORT
		   SET REPORT_STATUS = 'Y'
		 WHERE REPORT_NO = #{rNo}
	</update>

	<!-- 숙소 -->
	<resultMap type="com.cp.campers.camp.model.vo.Camp" id="campResultMap">
		<id property="campNo" column="CAMP_NO"/>
		<result property="campName" column="CAMP_NAME"/>
		<result property="userNo" column="USER_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="campAddress" column="CAMP_ADDRESS"/>
		<result property="campPhone" column="CAMP_PHONE"/>
		<result property="campIntro" column="CAMP_INTRO"/>
		<result property="campPath" column="CAMP_PATH"/>
		<result property="campPolicy" column="CAMP_POLICY"/>
		<result property="campStatus" column="CAMP_STATUS"/>
		<result property="accountNum" column="ACCOUNT_NUM"/>
		<result property="bank" column="BANK"/>
		<result property="checkin" column="CHECKIN"/>
		<result property="checkout" column="CHECKOUT"/>
		<result property="refusal" column="REFUSAL"/>
		<collection property="campRecordList" resultMap="campRecordResultMap"/>
		<collection property="imgFileList" resultMap="imageFileResultMap"/>
		<collection property="businessTypeList" resultMap="businessTypeResultMap"/>
		<collection property="facilityList" resultMap="facilityResultMap"/>
	</resultMap>
	
	<resultMap type="com.cp.campers.admin.model.vo.CampRecord" id="campRecordResultMap">
		<id property="crNo" column="CR_NO"/>
		<result property="recordDate" column="RECORD_DATE"/>
		<result property="campNo" column="CAMP_NO"/>
		<result property="recordNo" column="RECORD_NO"/>
		<association property="record" resultMap="recordResultMap"/>
	</resultMap>
	
	<resultMap type="com.cp.campers.admin.model.vo.Record" id="recordResultMap">
		<id property="recordNo" column="RECORD_NO"/>
		<result property="recordName" column="RECORD_NAME"/>
	</resultMap>
	
	<!-- 객실 -->	
	<resultMap type="com.cp.campers.camp.model.vo.Room" id="roomResultMap">
		<id property="roomNo" column="ROOM_NO"/>
		<result property="roomName" column="ROOM_NAME"/>
		<result property="roomMember" column="ROOM_MEMBER"/>
		<result property="roomPrice" column="ROOM_PRICE"/>
		<result property="roomSize" column="ROOM_SIZE"/>
		<result property="roomFloor" column="ROOM_FLOOR"/>
		<result property="roomParking" column="ROOM_PARKING"/>
		<result property="roomInfo" column="ROOM_INFO"/>
		<result property="roomAmount" column="ROOM_AMOUNT"/>
		<result property="roomForm" column="ROOM_FORM"/>
		<result property="roomCount" column="ROOM_COUNT"/>
		<result property="campNo" column="CAMP_NO "/>
		<collection property="imgFileList" resultMap="imageFileResultMap"/>		
	</resultMap>
	
	
	<resultMap type="com.cp.campers.camp.model.vo.ImageFile" id="imageFileResultMap">
		<id property="fileNo" column="FILE_NO"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="fileRoute" column="FILE_ROUTE"/>
		<result property="fileStatus" column="FILE_STATUS"/>
		<result property="fileLevel" column="FILE_LEVEL"/>
	</resultMap>
	
	<resultMap type="com.cp.campers.camp.model.vo.BusinessType" id="businessTypeResultMap">
		<id property="bNo" column="BUSINESS_NO"/>
		<result property="bType" column="BUSINESS_TYPE"/>
	</resultMap>
	
	<resultMap type="com.cp.campers.camp.model.vo.Facility" id="facilityResultMap">
		<id property="fNo" column="FACILITY_NO"/>
		<result property="fName" column="FACILITY_NAME"/>
		<result property="fType" column="FACILITY_TYPE"/>
	</resultMap>
	
	<select id="getCampListCount" resultType="_int">
   		SELECT COUNT(CAMP_NO)
   		  FROM CAMP
	</select>
   
	<select id="getCampListCountBySearch" parameterType="com.cp.campers.admin.model.vo.Search" resultType="_int">
   		SELECT COUNT(CAMP_NO)
   		  FROM CAMP
   		<choose>
		<when test="searchCondition == 'no'">		
		WHERE CAMP_NO = #{ searchValue }
		</when>
		<when test="searchCondition == 'name'">
		WHERE CAMP_NAME LIKE '%' || #{ searchValue } || '%'
		</when>
		</choose>
	</select>
   
	<select id="findAllCamp" parameterType="com.cp.campers.admin.model.vo.PageInfo" resultMap="campResultMap">
	   SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
						       C.CAMP_NO
						     , C.USER_NO
						     , M.USER_ID
						     , CR.RECORD_DATE
						     , C.CAMP_NAME
						     , CR.RECORD_NO
						     , R.RECORD_NAME
						     , C.CAMP_STATUS
						 FROM CAMP C
						 JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
                         JOIN CAMP_RECORD CR ON (C.CAMP_NO = CR.CAMP_NO)
						 JOIN RECORD R ON (CR.RECORD_NO = R.RECORD_NO)
						WHERE CAMP_STATUS IN ('Y', 'N')
                          AND (C.CAMP_NO, CR.RECORD_DATE) IN (SELECT
                          										     C.CAMP_NO
                          										   , MAX(CR.RECORD_DATE)
                          										FROM CAMP_RECORD CR 
                          										JOIN CAMP C ON(C.CAMP_NO = CR.CAMP_NO) 
                          										GROUP BY C.CAMP_NO)
                        ORDER BY CR.RECORD_DATE DESC) A)
		 WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>
   
	<select id="searchCamp" parameterType="hashmap" resultMap="campResultMap">
		SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
						       C.CAMP_NO
						     , C.USER_NO
						     , M.USER_ID
						     , CR.RECORD_DATE
						     , C.CAMP_NAME
						     , CR.RECORD_NO
						     , R.RECORD_NAME
						     , C.CAMP_STATUS
						 FROM CAMP C
						 JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
                         JOIN CAMP_RECORD CR ON (C.CAMP_NO = CR.CAMP_NO)
						 JOIN RECORD R ON (CR.RECORD_NO = R.RECORD_NO)
						WHERE CAMP_STATUS IN ('Y', 'N')
                          AND (C.CAMP_NO, CR.RECORD_DATE) IN (SELECT
                          										     C.CAMP_NO
                          										   , MAX(CR.RECORD_DATE)
                          										FROM CAMP_RECORD CR 
                          										JOIN CAMP C ON(C.CAMP_NO = CR.CAMP_NO) 
                          										GROUP BY C.CAMP_NO)
                        <choose>
						<when test="search.searchCondition == 'no'">		
						 AND C.CAMP_NO = #{ search.searchValue }
						</when>
						<when test="search.searchCondition == 'name'">
						 AND C.CAMP_NAME LIKE '%' || #{ search.searchValue } || '%'
						</when>
						</choose>
                        ORDER BY CR.RECORD_DATE DESC) A)
		 WHERE RNUM BETWEEN #{ pi.startRow } AND #{ pi.endRow }
	</select>

	<select id="detailCamp" parameterType="_int" resultMap="campResultMap">
		SELECT
		      C.CAMP_NO
		    , C.CAMP_NAME
		    , C.USER_NO
		    , M.USER_NO
		    , M.USER_NAME
		    , C.CAMP_ADDRESS
		    , C.CAMP_PHONE
		    , C.CAMP_INTRO
		    , C.CAMP_PATH
		    , I.FILE_NO
            , I.FILE_NAME
            , I.FILE_ROUTE
		    , C.CAMP_POLICY
		    , C.CAMP_STATUS
		    , C.ACCOUNT_NUM
		    , C.BANK
		    , C.CHECKIN
		    , C.CHECKOUT
            , CBT.BUSINESS_NO
            , BT.BUSINESS_TYPE
            , CFT.FACILITY_NO
            , F.FACILITY_NAME
            , F.FACILITY_TYPE
		    FROM CAMP C
		    LEFT JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
            LEFT JOIN CAMP_FILE CF ON(C.CAMP_NO = CF.CAMP_NO)
            LEFT JOIN IMAGEFILE I ON(I.FILE_NO = CF.FILE_NO)
            LEFT JOIN CAMP_BUSINESS_TYPE CBT ON(C.CAMP_NO = CBT.CAMP_NO)
            LEFT JOIN BUSINESS_TYPE BT ON(BT.BUSINESS_NO = CBT.BUSINESS_NO)
            LEFT JOIN CAMP_FACILITY CFT ON(C.CAMP_NO = CFT.CAMP_NO)
            LEFT JOIN FACILITY F ON(CFT.FACILITY_NO = F.FACILITY_NO)
		   WHERE C.CAMP_NO = #{campNo}
		     AND I.FILE_STATUS = 'N'
	</select>
	
	<select id="detailRoom" parameterType="_int" resultMap="roomResultMap">
		SELECT
			  R.ROOM_NO
			, R.ROOM_NAME
            , R.ROOM_MEMBER
            , R.ROOM_PRICE
            , R.ROOM_SIZE
            , R.ROOM_FLOOR
            , R.ROOM_PARKING
            , R.ROOM_INFO
            , R.ROOM_AMOUNT
            , R.ROOM_FORM
            , I.FILE_NAME
            , I.FILE_ROUTE
		 FROM ROOM R
		 JOIN ROOM_FILE RF ON(R.ROOM_NO = RF.ROOM_NO)
		 JOIN IMAGEFILE I ON(I.FILE_NO = RF.FILE_NO)
		WHERE R.CAMP_NO = #{ campNo }
		  AND I.FILE_STATUS = 'N'
	</select>
	
	<update id="deleteCamp" parameterType="_int">
		UPDATE CAMP
		   SET CAMP_STATUS = 'X'
		 WHERE CAMP_NO = #{ campNo }
	</update>
	
	<update id="refusal" parameterType="hashmap">
		UPDATE CAMP
		   SET REFUSAL = #{ refusal }
		     , CAMP_STATUS = 'R'
		 WHERE CAMP_NO = #{ campNo }
	</update>
	
	<update id="enroll" parameterType="_int">
		UPDATE CAMP
		   SET CAMP_STATUS = 'Y'
		 WHERE CAMP_NO = #{ campNo }
	</update>
	
	<insert id="recordToEnroll" parameterType="_int">
		INSERT INTO CAMP_RECORD 
		VALUES (SEQ_CR_NO.NEXTVAL
			  , DEFAULT
			  , SEQ_CAMP_NO.CURRVAL
			  , 2)
	</insert>

	<insert id="recordToNew" parameterType="_int">
		INSERT INTO CAMP_RECORD 
		VALUES (SEQ_CR_NO.NEXTVAL
			  , DEFAULT
			  , SEQ_CAMP_NO.CURRVAL
			  , 1)
	</insert>	
	
	<insert id="recordToDelete" parameterType="_int">
		INSERT INTO CAMP_RECORD 
		VALUES (SEQ_CR_NO.NEXTVAL
			  , DEFAULT
			  , SEQ_CAMP_NO.CURRVAL
			  , 3)
	</insert>
	
	
 	<select id="getcalculateListCount" resultType="_int">
  		 SELECT
		        COUNT(USER_NAME)
		   FROM MEMBER M
		   JOIN AUTHORITY_ROLE A ON(M.USER_NO = A.USER_NO) 
		  WHERE AUTHORITY_CODE = 2
	</select>
	
 	<resultMap type="com.cp.campers.admin.model.vo.CalculateInfo" id="calculateList">
		<id property="campNo" column="CAMP_NO"></id>
		<result property="userName" column="USER_NAME"/>
		<result property="accountNum" column="ACCOUNT_NUM"/>
		<result property="bank" column="BANK"/>
	</resultMap>
	
	
	<select id="calculateList" resultMap="calculateList">
		 SELECT * 
	      FROM (SELECT ROWNUM RNUM, A.*
			      FROM (SELECT
                               CAMP_NO
                             , USER_NAME
                             , ACCOUNT_NUM
                             , BANK
                              FROM MEMBER M
                              JOIN CAMP C ON(M.USER_NO = C.USER_NO)
                              JOIN AUTHORITY_ROLE A ON(M.USER_NO = A.USER_NO) 
                             WHERE AUTHORITY_CODE = 2
	                    ORDER BY C.CAMP_NO) A)
		 WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select> 
	 
	
	
	
	
</mapper>