<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cp.campers.board.model.dao.BoardMapper">

<resultMap type="com.cp.campers.board.model.vo.Board" id="boardResultMap">
	<id property="bid" column="BID"/>
	<result property="title" column="BTITLE"/>
	<result property="content" column="BCONTENT"/>
	<result property="createDate" column="CREATE_DATE"/>
	<result property="modifyDate" column="MODIFY_DATE"/>
	<result property="status" column="STATUS"/>
	<result property="writer" column="WRITER"/>
	<result property="bcount" column="BCOUNT"/>
	<result property="blike" column="BLIKE"/>
	<result property="nickName" column="NICKNAME"/>
	<result property="fileLevel" column="FILE_LEVEL"/>
	<result property="fileRoute" column="FILE_ROUTE"/>
	<result property="fileName" column="FILE_NAME"/>
	<result property="prevId" column="PREVID"/>
	<result property="prevTitle" column="PREVTITLE"/>
	<result property="nextId" column="NEXTID"/>
	<result property="nextTitle" column="NEXTTITLE"/>
	<collection property="boardFileNoList" resultMap="boardFileNoResultMap"/>
</resultMap>
<resultMap type="com.cp.campers.board.model.vo.BoardFileNo" id="boardFileNoResultMap">
	<id property="bid" column="BID"/>
	<id property="fileNo" column="FILE_NO"/>
	<association property="attachment" resultMap="attachmentResultMap"/>
</resultMap>
<resultMap type="com.cp.campers.board.model.vo.Attachment" id="attachmentResultMap">
	<id property="fileNo" column="FILE_NO"/>
	<result property="fileName" column="FILE_NAME"/>
	<result property="fileRoute" column="FILE_ROUTE"/>
	<result property="status" column="FILE_STATUS"/>
	<result property="fileLevel" column="FILE_LEVEL"/>
	<result property="fileOriginName" column="FILE_ORIGIN_NAME"/>
</resultMap>


<insert id="insertBoard" parameterType="com.cp.campers.board.model.vo.Board">
INSERT INTO BOARD 
VALUES
(
	SEQ_BID.NEXTVAL,
	#{title},
	#{content},
	SYSDATE,
	SYSDATE,
	DEFAULT,
	#{writer},
	DEFAULT,
	DEFAULT,
	null,
	null,
	null,
	null
)
</insert>
<insert id="insertBoardImage" parameterType="com.cp.campers.board.model.vo.Attachment">
INSERT
INTO IMAGEFILE
VALUES
(
		SEQ_FILE_NO.NEXTVAL,
		#{fileName},
		#{fileRoute},
		DEFAULT,
		#{fileLevel},
		#{fileOriginName}
)
</insert>
<insert id="insertImageNo" parameterType="_int">
INSERT
INTO BOARD_FILE
VALUES
(SEQ_BID.CURRVAL, SEQ_FILE_NO.CURRVAL)
</insert>
<select id="getListCount"  resultType="_int">
	SELECT
			COUNT(*)
	FROM BOARD
	WHERE STATUS = 'N'
</select>
<select id="selectBoardList" resultMap="boardResultMap">
SELECT *
FROM (SELECT ROWNUM RNUM, A.*
FROM (select 
            b.bid, 
            btitle, 
            bcontent, 
            b.modify_date, 
            b.create_date,
            nickName,
            bcount,
            (SELECT COUNT(*) FROM BOARD_LIKE WHERE BID = b.bid) blike
      from board b
      join member m on (b.writer = m.user_no)
      where b.status = 'N'
ORDER BY bid DESC) A)
where RNUM between #{startRow} and #{endRow} 
</select>
<select id="selectThumbnailList" resultMap="boardResultMap">
select
        bid,
        file_level,
        file_route,
        file_name
    from board
    join board_file using(bid)
    join imagefile using(file_no)
  where file_level = 0
  and file_status = 'N'
  order by bid desc
</select>

<select id="getListCountBySearch" parameterType="com.cp.campers.board.model.vo.Search" resultType="_int">
select
		count(*)
 	from board b 
    left join member m on(user_no=writer)
where b.status = 'N'
 <choose>
 <when test="searchCondition == 'all'">
 and (btitle like '%'||#{searchValue}||'%' or bcontent like '%'||#{searchValue}||'%')
 </when>
 <when test="searchCondition == 'title'">
 and btitle like '%'||#{searchValue}||'%'
 </when>
 <when test="searchCondition == 'content'">
 and bcontent like '%'||#{searchValue}||'%'
 </when>
 <when test="searchCondition == 'nickname'">
 and nickname= #{searchValue}
 </when>
 </choose>
</select>

<select id="searchBoardList" parameterType="hashmap" resultMap="boardResultMap">
SELECT *
FROM (SELECT ROWNUM RNUM, A.*
FROM (select 
            bid, 
            btitle, 
            bcontent, 
            b.modify_date, 
            b.create_date,
            nickName,
            bcount,
            blike
      from board b
      join member m on (b.writer = m.user_no)
      where b.status = 'N'
		<choose>
			<when test="search.searchCondition == 'all' and search.searchValue != null">
			and (btitle like '%'||#{search.searchValue}||'%' or bcontent like '%'||#{search.searchValue}||'%')
			</when>
			<when test="search.searchCondition == 'title' and search.searchValue != null">
			and btitle like '%'||#{search.searchValue}||'%'
			</when>
			<when test="search.searchCondition == 'content' and search.searchValue != null">
			and bcontent like '%'||#{search.searchValue}||'%'
			</when>
			<when test="search.searchCondition == 'nickname' and search.searchValue != null">
			and nickname= #{search.searchValue}
			</when>
		</choose>
		<choose>
			<when test="search.sort == 'desc'">
			ORDER BY bid DESC) A)
			</when>
			<when test="search.sort == 'asc'">
			ORDER BY bid ASC) A)
			</when>
			<when test="search.sort == 'count'">
			ORDER BY bcount desc, bid desc) A)
			</when>
			<when test="search.sort == 'like'">
			ORDER BY blike desc, bid desc) A)
			</when>
			<otherwise>
			ORDER BY bid DESC) A)
			</otherwise>
		</choose>
		where RNUM between #{pi.startRow} and #{pi.endRow}
</select>

<select id="boardDetail" resultMap="boardResultMap" parameterType="_int">
select a.*
from (
    select
            bid, 
            btitle, 
            bcontent, 
            b.modify_date, 
            b.create_date,
            nickName,
            bcount,
            blike,
            writer,
           LAG(bid, 1,0) OVER(ORDER BY bid) nextId,
           LAG(btitle, 1,0) OVER(ORDER BY bid) nextTitle,
           LEAD(bid,1,0) OVER(ORDER BY bid) prevId,
           LEAD(btitle,1,0) OVER(ORDER BY bid) prevTitle
  from board b
  join member m on (b.writer = m.user_no)
  where b.status = 'N'
)a
where a.bid = #{bid}
</select>

<insert id="insertComment">
INSERT INTO REPLY VALUES(
	SEQ_CID.NEXTVAL,
	#{bid},
	#{cContent},
	SYSDATE,
	SYSDATE,
	DEFAULT,
	NULL,
	#{cWriter},
	NULL,
	SEQ_CID.CURRVAL
)
</insert>

<resultMap id="CommentResultMap" type="com.cp.campers.board.model.vo.Comment">
	<id property="cid" column="CID"/>
	<result property="bid" column="BID"/>
	<result property="cContent" column="CCONTENT"/>
	<result property="createDate" column="CREATE_DATE"/>
	<result property="modifyDate" column="MODIFY_DATE"/>
	<result property="status" column="STATUS"/>
	<result property="refCid" column="REF_CID"/>
	<result property="cWriter" column="CWRITER"/>
	<result property="refWriter" column="REF_WRITER"/>
	<result property="nickName" column="NICKNAME"/>
	<result property="profilePath" column="PROFILE_PATH"/>
	<result property="refOriginCid" column="REF_ORIGIN_CID"/>
	<result property="title" column="BTITLE"/>
</resultMap>

<select id="selectCommentList" resultMap="CommentResultMap">
SELECT
        CID,
        BID,
        CCONTENT,
        MODIFY_DATE,
        REF_CID,
        CWRITER,
        NICKNAME,
        PROFILE_PATH,
        REF_WRITER,
        REF_ORIGIN_CID,
        STATUS
    FROM (
    	SELECT
            R.CID,
            R.BID,
            R.CCONTENT,
            R.MODIFY_DATE,
            R.REF_CID,
            R.CWRITER,
            NICKNAME,
            PROFILE_PATH,
            REF_WRITER,
            R.CREATE_DATE,
            REF_ORIGIN_CID,
            R.STATUS
            FROM REPLY R
            JOIN MEMBER M ON(M.USER_NO = R.CWRITER)
        )
        WHERE BID = #{ bid }
    START WITH REF_CID IS NULL
CONNECT BY PRIOR CID = REF_CID
</select>

<insert id="insertRefComment" parameterType="com.cp.campers.board.model.vo.Comment">
INSERT INTO REPLY VALUES(
	SEQ_CID.NEXTVAL,
	#{bid},
	#{cContent},
	SYSDATE,
	SYSDATE,
	DEFAULT,
	#{refCid},
	#{cWriter},
	#{refWriter},
	NULL
)
</insert>


<select id="selectBoardImage" resultMap="boardFileNoResultMap">
select 
            bid,
            file_no,
            file_route,
            file_name,
            file_origin_name,
            file_status
      from board_file 
      join imagefile using (file_no)
      where bid = #{bid}
      and file_status = 'N'
</select>

<select id="selectBid" resultType="int">
select seq_bid.currval from dual
</select>

<select id="selectBoardUpdate" resultMap="boardResultMap">
select 
            bid, 
            btitle, 
            bcontent, 
            b.modify_date, 
            b.create_date,
            bcount,
            blike,
            writer
      from board b
      where b.status = 'N'
      and bid = #{bid}
</select>

<update id="deleteBoard" parameterType="_int">
update board
   set status = 'Y'
 where bid = #{bid}
</update>

<update id="increaseCount" parameterType="_int">
update board
   set bcount = bcount+1
 where bid = #{bid}
</update>

<select id="getListCountMyComment" resultType="int">
select count(*)
from reply
where cwriter = #{writer}
and status ='N'
</select>

<select id="selectMyCommentList" resultMap="CommentResultMap">
SELECT *
FROM (SELECT ROWNUM RNUM, A.*
FROM (select 
           cid,
           bid,
           ccontent,
           c.create_date,
           btitle,
           nickname
      from reply c
      join member m on (c.cwriter = m.user_no)
      join board b using (bid)
      where c.status = 'N'
      and cwriter = #{writer}
      ORDER BY cid DESC) A)
where RNUM between #{pi.startRow} and #{pi.endRow}
</select>
<select id="selectMyBoardList"  parameterType="hashmap" resultMap="boardResultMap">
SELECT *
FROM (SELECT ROWNUM RNUM, A.*
FROM (select 
            bid, 
            btitle, 
            bcontent, 
            b.modify_date, 
            b.create_date,
            nickName,
            bcount,
            blike
      from board b
      join member m on (b.writer = m.user_no)
      where b.status = 'N'
      and writer = #{ writer }
      ORDER BY bid DESC) A)
where RNUM between #{pi.startRow} and #{pi.endRow}
</select>
<select id="getListCountMyBoard" resultType="int">
select count(*)
from board
where writer = #{writer}
and status ='N'
</select>
<update id="commentDelete">
update reply
   set status = 'Y'
 where cid = #{cid}
</update>

<insert id="boardLikeUp" parameterType="hashmap">
insert into board_like values(#{bid}, #{userNo})
</insert>

<select id="selectLikeCount" resultType="String">
select count(*)
from board_like
where bid = #{bid}
</select>

<select id="selectLikedBid" resultType="String">
select bid
from board_like
where user_no = #{userNo}
and bid = #{bid}
</select>
<delete id="boardLikeDown"  parameterType="hashmap">
delete from board_like
where bid = #{bid}
and user_no = #{userNo}
</delete>

<update id="updateBoard" parameterType="com.cp.campers.board.model.vo.Board">
UPDATE BOARD
    SET BCONTENT = #{content}
      , BTITLE = #{title}
      , MODIFY_DATE = SYSDATE
  WHERE BID = #{bid}
</update>

<update id="updateBoardImage" parameterType="hashmap">
UPDATE IMAGEFILE
	SET FILE_ORIGIN_NAME = #{attachment.fileOriginName}
	  , FILE_NAME = #{attachment.fileName}
  WHERE FILE_NAME = #{attachment.deletedName}
</update>

<insert id="insertAddedPhoto" parameterType="hashmap">
INSERT
	INTO IMAGEFILE VALUES
	(
		SEQ_FILE_NO.NEXTVAL,
		#{attachment.fileName},
		#{attachment.fileRoute},
		DEFAULT,
		#{attachment.fileLevel},
		#{attachment.fileOriginName}
	)
</insert>
<insert id="insertAddedImageNo" parameterType="hashmap">
INSERT
INTO BOARD_FILE
VALUES
(#{bid}, SEQ_FILE_NO.CURRVAL)
</insert>

<update id="deleteImgs" parameterType="list">
UPDATE IMAGEFILE
   SET FILE_STATUS = 'Y'
WHERE FILE_NAME = #{deleteImg}
</update>


</mapper>