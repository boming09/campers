<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cp.campers.search.model.dao.SearchMapper">

	<resultMap id="searchCampMap" type="com.cp.campers.search.model.vo.SearchCamp">
		<id property="cNo" column="CAMP_NO" />
		<result property="cName" column="CAMP_NAME" />
		<result property="cAddress" column="CAMP_ADDRESS" />
		<result property="fileRoute" column="FILE_ROUTE" />
		<result property="fileName" column="FILE_NAME" />
		<result property="rCount" column="ROOM_COUNT" />
		<result property="maxGuest" column="MAX_GUEST" />
		<result property="minPrice" column="MIN_PRICE" />
		<result property="maxPrice" column="MAX_PRICE" />
		<result property="rAmount" column="ROOM_AMOUNT" />
		<result property="rQua" column="ROOM_QUA" />
	</resultMap>

	<!-- 메인페이지에서 검색한 캠핑장 총 개수 구하기 -->
	<select id="mainSearchCount" parameterType="Map" resultType="_int">
	SELECT
        	COUNT(CAMP_NO)
	   FROM (SELECT
	   				C.CAMP_NO AS "CAMP_NO"
				  , C.CAMP_NAME AS "CAMP_NAME"
				  , SUBSTR(C.CAMP_ADDRESS, 0, INSTR(C.CAMP_ADDRESS, ' ', 1, 3)) AS "CAMP_ADDRESS"
				  , F.FILE_ROUTE AS "FILE_ROUTE"
				  , F.FILE_NAME AS "FILE_NAME"
				  , SUM(R.ROOM_COUNT) AS "ROOM_COUNT"
				  , MAX(R.ROOM_MEMBER) AS "MAX_GUEST"
				  , MIN(R.ROOM_PRICE) AS "MIN_PRICE"
				  , MAX(R.ROOM_PRICE) AS "MAX_PRICE"
				  , SUM(R.ROOM_AMOUNT) AS "ROOM_AMOUNT"
                  , SUM(E.ROOM_QUA) AS "ROOM_QUA"
			   FROM CAMP C
			   JOIN ROOM R ON R.CAMP_NO = C.CAMP_NO 
			   JOIN CAMP_FILE I ON C.CAMP_NO = I.CAMP_NO 
			   JOIN IMAGEFILE F ON I.FILE_NO = F.FILE_NO
			   JOIN CAMP_BUSINESS_TYPE T ON C.CAMP_NO = T.CAMP_NO
			   JOIN BUSINESS_TYPE P ON P.BUSINESS_NO = T.BUSINESS_NO
			   LEFT JOIN RESERVE E ON E.ROOM_NO = R.ROOM_NO
			  WHERE C.CAMP_ADDRESS LIKE '%'||#{ fc.sArea }||'%'
                AND C.CAMP_STATUS = 'Y'
			    AND F.FILE_STATUS = 'N'
			    AND F.FILE_LEVEL = 0
			    AND R.ROOM_MEMBER &gt;= #{ fc.sGuest }
			    AND P.BUSINESS_TYPE IN 
			    <foreach item="type" collection="type" open="(" separator="," close=")">
				 #{type}
				 </foreach>
			     AND ((E.CHECKIN IS NULL OR E.CHECKIN NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }) 
			     AND (E.CHECKOUT IS NULL OR E.CHECKOUT NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }))
			  GROUP BY C.CAMP_NO, C.CAMP_NAME, C.CAMP_ADDRESS, F.FILE_ROUTE, F.FILE_NAME, R.ROOM_MEMBER
           )
	</select>



	<select id="mainSearch" parameterType="Map" resultMap="searchCampMap">
			SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (SELECT
				    C.CAMP_NO AS "CAMP_NO"
				  , C.CAMP_NAME AS "CAMP_NAME"
				  , SUBSTR(C.CAMP_ADDRESS, 0, INSTR(C.CAMP_ADDRESS, ' ', 1, 3)) AS "CAMP_ADDRESS"
				  , F.FILE_ROUTE AS "FILE_ROUTE"
				  , F.FILE_NAME AS "FILE_NAME"
				  , SUM(R.ROOM_COUNT) AS "ROOM_COUNT"
				  , MAX(R.ROOM_MEMBER) AS "MAX_GUEST"
				  , MIN(R.ROOM_PRICE) AS "MIN_PRICE"
				  , MAX(R.ROOM_PRICE) AS "MAX_PRICE"
				  , SUM(R.ROOM_AMOUNT) AS "ROOM_AMOUNT"
                  , SUM(E.ROOM_QUA) AS "ROOM_QUA"
			   FROM CAMP C
			   JOIN ROOM R ON R.CAMP_NO = C.CAMP_NO 
			   JOIN CAMP_FILE I ON C.CAMP_NO = I.CAMP_NO 
			   JOIN IMAGEFILE F ON I.FILE_NO = F.FILE_NO
			   JOIN CAMP_BUSINESS_TYPE T ON C.CAMP_NO = T.CAMP_NO
			   JOIN BUSINESS_TYPE P ON P.BUSINESS_NO = T.BUSINESS_NO
			   LEFT JOIN RESERVE E ON E.ROOM_NO = R.ROOM_NO
			  WHERE C.CAMP_ADDRESS LIKE '%'||#{ fc.sArea }||'%'
                AND C.CAMP_STATUS = 'Y'
			    AND F.FILE_STATUS = 'N'
			    AND F.FILE_LEVEL = 0
			    AND R.ROOM_MEMBER &gt;= #{ fc.sGuest }
			    AND P.BUSINESS_TYPE IN 
			    <foreach item="type" collection="type" open="(" separator="," close=")">
				 #{type}
				 </foreach>
			    AND ((E.CHECKIN IS NULL OR E.CHECKIN NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }) 
			    AND (E.CHECKOUT IS NULL OR E.CHECKOUT NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }))
			  GROUP BY C.CAMP_NO, C.CAMP_NAME, C.CAMP_ADDRESS, F.FILE_ROUTE, F.FILE_NAME, R.ROOM_MEMBER
			  ORDER BY C.CAMP_NAME ASC
			)A)
		WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>



	<select id="campAllSearch" parameterType="_int" resultMap="searchCampMap">
	SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (SELECT 
                    C.CAMP_NO 
                  , C.CAMP_NAME 
                  , SUBSTR(C.CAMP_ADDRESS, 0, INSTR(C.CAMP_ADDRESS, ' ', 1, 3)) AS "CAMP_ADDRESS"
                  , F.FILE_ROUTE 
                  , F.FILE_NAME 
                  , SUM(R.ROOM_COUNT) AS "ROOM_COUNT"
                  , MAX(R.ROOM_MEMBER) AS "MAX_GUEST" 
                  , MIN(R.ROOM_PRICE) AS "MIN_PRICE"
                  , MAX(R.ROOM_PRICE) AS "MAX_PRICE" 
               FROM ROOM R 
               JOIN CAMP C ON R.CAMP_NO = C.CAMP_NO 
               JOIN CAMP_FILE I ON C.CAMP_NO = I.CAMP_NO
               JOIN IMAGEFILE F ON I.FILE_NO = F.FILE_NO 
              WHERE C.CAMP_STATUS = 'Y'
                AND F.FILE_STATUS = 'N' 
                AND F.FILE_LEVEL = 0 
              GROUP BY C.CAMP_NO, C.CAMP_NAME, C.CAMP_ADDRESS, F.FILE_ROUTE, F.FILE_NAME, R.ROOM_MEMBER
              ORDER BY C.CAMP_NAME ASC
		 )A)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	<!-- 등록된 캠핑장 총 개수 구하기 -->
	<select id="campListCount" resultType="_int">
		SELECT
				COUNT(*) 
		   FROM CAMP 
		  WHERE CAMP_STATUS = 'Y'
	</select>
	
	
	<!-- 조건 검색된 캠핑장 총 개수 구하기 -->
	<select id="campFindCount" parameterType="Map" resultType="_int">
	SELECT
        	COUNT(CAMP_NO)
	   FROM (SELECT
				    C.CAMP_NO AS "CAMP_NO"
				  , C.CAMP_NAME AS "CAMP_NAME"
				  , SUBSTR(C.CAMP_ADDRESS, 0, INSTR(C.CAMP_ADDRESS, ' ', 1, 3)) AS "CAMP_ADDRESS"
				  , F.FILE_ROUTE AS "FILE_ROUTE"
				  , F.FILE_NAME AS "FILE_NAME"
				  , SUM(R.ROOM_COUNT) AS "ROOM_COUNT"
				  , MAX(R.ROOM_MEMBER) AS "MAX_GUEST"
				  , MIN(R.ROOM_PRICE) AS "MIN_PRICE"
				  , MAX(R.ROOM_PRICE) AS "MAX_PRICE"
                  , SUM(R.ROOM_AMOUNT) AS "ROOM_AMOUNT"
                  , SUM(E.ROOM_QUA) AS "ROOM_QUA"
			   FROM CAMP C
			   JOIN ROOM R ON R.CAMP_NO = C.CAMP_NO 
			   JOIN CAMP_FILE I ON C.CAMP_NO = I.CAMP_NO 
			   JOIN IMAGEFILE F ON I.FILE_NO = F.FILE_NO
			   JOIN CAMP_BUSINESS_TYPE T ON C.CAMP_NO = T.CAMP_NO
			   JOIN BUSINESS_TYPE P ON P.BUSINESS_NO = T.BUSINESS_NO
			   JOIN CAMP_FACILITY Y ON C.CAMP_NO = Y.CAMP_NO
			   JOIN FACILITY L ON L.FACILITY_NO = Y.FACILITY_NO
			   LEFT JOIN RESERVE E ON E.ROOM_NO = R.ROOM_NO
			  WHERE C.CAMP_ADDRESS LIKE '%'||#{ fc.sArea }||'%'
			  <if test="fc.sName !='null' and fc.sName != null and fc.sName != ''">
			   	AND C.CAMP_NAME LIKE '%'||#{ fc.sName }||'%'
			  </if>
                AND C.CAMP_STATUS = 'Y'
			    AND F.FILE_STATUS = 'N'
			    AND F.FILE_LEVEL = 0
			    AND R.ROOM_MEMBER &gt;= #{ fc.sGuest }
			   <if test="type != null and !type.isEmpty() and !''.equals(type) and type.size != 0">
			    AND P.BUSINESS_TYPE IN 
			    <foreach item="type" collection="type" open="(" separator="," close=")">
				 #{type}
				 </foreach>
			   </if>
			    <if test="faci != null and !faci.isEmpty() and !''.equals(faci) and faci.size != 0">
			    <foreach item="faci" collection="faci">
			     AND L.FACILITY_NAME = #{faci}
			    </foreach>
			    </if>
			     <if test="floor != null and !floor.isEmpty() and !''.equals(floor) and floor.size != 0">
			     AND R.ROOM_FLOOR IN 
			     <foreach item="floor" collection="floor" open="(" separator="," close=")">
			     #{floor}
			    </foreach>
			    </if>
			     AND ((E.CHECKIN IS NULL OR E.CHECKIN NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }) 
			     AND (E.CHECKOUT IS NULL OR E.CHECKOUT NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }))
			  GROUP BY C.CAMP_NO, C.CAMP_NAME, C.CAMP_ADDRESS, F.FILE_ROUTE, F.FILE_NAME, R.ROOM_MEMBER
           )
	</select>
	
	
	
	<select id="campFindSearch" parameterType="Map" resultMap="searchCampMap">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (SELECT
				    C.CAMP_NO AS "CAMP_NO"
				  , C.CAMP_NAME AS "CAMP_NAME"
				  , SUBSTR(C.CAMP_ADDRESS, 0, INSTR(C.CAMP_ADDRESS, ' ', 1, 3)) AS "CAMP_ADDRESS"
				  , F.FILE_ROUTE AS "FILE_ROUTE"
				  , F.FILE_NAME AS "FILE_NAME"
				  , SUM(R.ROOM_COUNT) AS "ROOM_COUNT"
				  , MAX(R.ROOM_MEMBER) AS "MAX_GUEST"
				  , MIN(R.ROOM_PRICE) AS "MIN_PRICE"
				  , MAX(R.ROOM_PRICE) AS "MAX_PRICE"
				  , SUM(R.ROOM_AMOUNT) AS "ROOM_AMOUNT"
                  , SUM(E.ROOM_QUA) AS "ROOM_QUA"
			   FROM CAMP C
			   JOIN ROOM R ON R.CAMP_NO = C.CAMP_NO 
			   JOIN CAMP_FILE I ON C.CAMP_NO = I.CAMP_NO 
			   JOIN IMAGEFILE F ON I.FILE_NO = F.FILE_NO
			   JOIN CAMP_BUSINESS_TYPE T ON C.CAMP_NO = T.CAMP_NO
			   JOIN BUSINESS_TYPE P ON P.BUSINESS_NO = T.BUSINESS_NO
			   JOIN CAMP_FACILITY Y ON C.CAMP_NO = Y.CAMP_NO
			   JOIN FACILITY L ON L.FACILITY_NO = Y.FACILITY_NO
			   LEFT JOIN RESERVE E ON E.ROOM_NO = R.ROOM_NO
			  WHERE C.CAMP_ADDRESS LIKE '%'||#{ fc.sArea }||'%'
			  <if test="fc.sName !='null' and fc.sName != null and fc.sName != ''">
			   	AND C.CAMP_NAME LIKE '%'||#{ fc.sName }||'%'
			  </if>
                AND C.CAMP_STATUS = 'Y'
			    AND F.FILE_STATUS = 'N'
			    AND F.FILE_LEVEL = 0
			    AND R.ROOM_MEMBER &gt;= #{ fc.sGuest }
			   <if test="type != null and !type.isEmpty() and !''.equals(type) and type.size != 0">
			    AND P.BUSINESS_TYPE IN 
			    <foreach item="type" collection="type" open="(" separator="," close=")">
				 #{type}
				 </foreach>
			   </if>
			    <if test="faci != null and !faci.isEmpty() and !''.equals(faci) and faci.size != 0">
			    <foreach item="faci" collection="faci">
			     AND L.FACILITY_NAME = #{faci}
			    </foreach>
			    </if>
			     <if test="floor != null and !floor.isEmpty() and !''.equals(floor) and floor.size != 0">
			     AND R.ROOM_FLOOR IN 
			     <foreach item="floor" collection="floor" open="(" separator="," close=")">
			     #{floor}
			    </foreach>
			    </if>
			    AND ((E.CHECKIN IS NULL OR E.CHECKIN NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }) 
			    AND (E.CHECKOUT IS NULL OR E.CHECKOUT NOT BETWEEN #{ fc.sIn } AND #{ fc.sOut }))
			  GROUP BY C.CAMP_NO, C.CAMP_NAME, C.CAMP_ADDRESS, F.FILE_ROUTE, F.FILE_NAME, R.ROOM_MEMBER
			  ORDER BY C.CAMP_NAME ASC
			)A)
		WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>
	
	

</mapper>